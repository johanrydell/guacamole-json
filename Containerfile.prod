FROM python:3.12-slim AS build

# Set the working directory inside the container
WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install setuptools and Cython using pip
RUN pip install --no-cache-dir setuptools cython

# Copy requirements file and install dependencies
COPY requirements.txt /build/
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY app /build/app/

# Compile Python scripts to C and then to shared objects
WORKDIR /build/app
RUN cythonize -i -3 *.py

# Stage 2: Final runtime container
FROM python:3.12-slim

# Set the working directory
WORKDIR /app

# Copy the compiled application
COPY --from=build /build/app/*.so /app/
COPY templates /app/templates/
COPY static /app/static/

# Install runtime dependencies
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Add a non-root user
RUN groupadd -r appuser && useradd --no-log-init -r -g appuser appuser

# Change ownership of the application files
RUN chown -R appuser:appuser /app

# Switch to the non-root user
USER appuser

# Embed build information
ARG BUILD_DATE
ARG BUILD_VERSION
ENV BUILD_INFO="Release $BUILD_VERSION - $BUILD_DATE"

# Run the application
CMD ["python", "-c", "import run; run.main()"]
